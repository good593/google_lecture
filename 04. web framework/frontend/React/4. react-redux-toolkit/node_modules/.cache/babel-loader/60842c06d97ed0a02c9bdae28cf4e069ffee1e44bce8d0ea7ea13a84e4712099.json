{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst asyncUpFetch = createAsyncThunk('counterSlice/asyncUpFetch', async () => {\n  const resp = await fetch('https://jsonplaceholder.typicode.com/todos/1');\n  const data = await resp.json();\n  console.log(data);\n  return data;\n});\nconst counterAsyncSlice = createSlice({\n  name: 'counterSlice',\n  initialState: {\n    value: 0,\n    status: 'Welcome'\n  },\n  reducers: {\n    up: (state, action) => {\n      state.value = state.value + action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(asyncUpFetch.pending, (state, action) => {\n      state.status = 'Loading';\n    });\n    builder.addCase(asyncUpFetch.fulfilled, (state, action) => {\n      state.value = action.payload['id'];\n      state.status = 'complete';\n    });\n    builder.addCase(asyncUpFetch.rejected, (state, action) => {\n      state.status = 'fail';\n    });\n  }\n});\nexport default counterAsyncSlice;\nexport { asyncUpFetch };","map":{"version":3,"names":["createSlice","createAsyncThunk","asyncUpFetch","resp","fetch","data","json","console","log","counterAsyncSlice","name","initialState","value","status","reducers","up","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected"],"sources":["/Users/gyoungwon-cho/dev/google drive/google_lecture/04. web framework/frontend/React/4. react-redux-toolkit/src/redux/counterAsyncSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nconst asyncUpFetch = createAsyncThunk(\n  'counterSlice/asyncUpFetch',\n  async () => {\n    const resp = await fetch('https://jsonplaceholder.typicode.com/todos/1')\n    const data = await resp.json();\n    console.log(data)\n    return data;\n\n  }\n)\n\nconst counterAsyncSlice = createSlice({\n  name:'counterSlice',\n  initialState:{\n    value:0,\n    status:'Welcome'\n  },\n  reducers:{\n    up:(state, action)=>{\n      state.value = state.value + action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(asyncUpFetch.pending, (state,action)=>{\n      state.status = 'Loading';\n    })\n    builder.addCase(asyncUpFetch.fulfilled, (state,action)=>{\n      state.value = action.payload['id'];\n      state.status = 'complete';\n    })\n    builder.addCase(asyncUpFetch.rejected, (state,action)=>{\n      state.status = 'fail';\n    })\n  }\n});\nexport default counterAsyncSlice;\nexport {asyncUpFetch}\n\n"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAE9D,MAAMC,YAAY,GAAGD,gBAAgB,CACnC,2BAA2B,EAC3B,YAAY;EACV,MAAME,IAAI,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;EACxE,MAAMC,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;EAC9BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,OAAOA,IAAI;AAEb,CACF,CAAC;AAED,MAAMI,iBAAiB,GAAGT,WAAW,CAAC;EACpCU,IAAI,EAAC,cAAc;EACnBC,YAAY,EAAC;IACXC,KAAK,EAAC,CAAC;IACPC,MAAM,EAAC;EACT,CAAC;EACDC,QAAQ,EAAC;IACPC,EAAE,EAACA,CAACC,KAAK,EAAEC,MAAM,KAAG;MAClBD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO;IAC5C;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACnB,YAAY,CAACoB,OAAO,EAAE,CAACN,KAAK,EAACC,MAAM,KAAG;MACpDD,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACFO,OAAO,CAACC,OAAO,CAACnB,YAAY,CAACqB,SAAS,EAAE,CAACP,KAAK,EAACC,MAAM,KAAG;MACtDD,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAAC,IAAI,CAAC;MAClCF,KAAK,CAACH,MAAM,GAAG,UAAU;IAC3B,CAAC,CAAC;IACFO,OAAO,CAACC,OAAO,CAACnB,YAAY,CAACsB,QAAQ,EAAE,CAACR,KAAK,EAACC,MAAM,KAAG;MACrDD,KAAK,CAACH,MAAM,GAAG,MAAM;IACvB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AACF,eAAeJ,iBAAiB;AAChC,SAAQP,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}