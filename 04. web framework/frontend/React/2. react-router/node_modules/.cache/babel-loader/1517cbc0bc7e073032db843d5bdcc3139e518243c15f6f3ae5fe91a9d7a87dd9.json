{"ast":null,"code":"var _jsxFileName = \"/Users/gyoungwon-cho/dev/google drive/google_lecture/04. web framework/frontend/React/react-router/src/pages/UserList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = ({\n  userData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: userData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: userData.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = User;\nconst UserList = () => {\n  const users = [{\n    email: 'user1@gmail.com',\n    name: 'user1'\n  }, {\n    email: 'user2@gmail.com',\n    name: 'user2'\n  }, {\n    email: 'user3@gmail.com',\n    name: 'user3'\n  }, {\n    email: 'user4@gmail.com',\n    name: 'user4'\n  }, {\n    email: 'user5@gmail.com',\n    name: 'user5'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        userData: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c2 = UserList;\nexport default UserList;\nvar _c, _c2;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"UserList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","User","userData","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","UserList","users","map","user","_c2","$RefreshReg$"],"sources":["/Users/gyoungwon-cho/dev/google drive/google_lecture/04. web framework/frontend/React/react-router/src/pages/UserList.js"],"sourcesContent":["import React from \"react\";\n\nconst User = ({userData}) => {\n    return (\n        <tr>\n            <td>{userData.name}</td>\n            <td>{userData.email}</td>\n        </tr>\n    )\n}\n\nconst UserList = () => {\n    const users = [\n        {\n            email: 'user1@gmail.com', name: 'user1'\n        },\n        {\n            email: 'user2@gmail.com', name: 'user2'\n        },\n        {\n            email: 'user3@gmail.com', name: 'user3'\n        },\n        {\n            email: 'user4@gmail.com', name: 'user4'\n        },\n        {\n            email: 'user5@gmail.com', name: 'user5'\n        }\n    ];\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>이름</th>\n                    <th>이메일</th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.map(user => <User userData={user}/>)}\n            </tbody>\n        </table>\n    )\n};\n\nexport default UserList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EACzB,oBACIF,OAAA;IAAAG,QAAA,gBACIH,OAAA;MAAAG,QAAA,EAAKD,QAAQ,CAACE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBR,OAAA;MAAAG,QAAA,EAAKD,QAAQ,CAACO;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEb,CAAC;AAAAE,EAAA,GAPKT,IAAI;AASV,MAAMU,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,KAAK,GAAG,CACV;IACIH,KAAK,EAAE,iBAAiB;IAAEL,IAAI,EAAE;EACpC,CAAC,EACD;IACIK,KAAK,EAAE,iBAAiB;IAAEL,IAAI,EAAE;EACpC,CAAC,EACD;IACIK,KAAK,EAAE,iBAAiB;IAAEL,IAAI,EAAE;EACpC,CAAC,EACD;IACIK,KAAK,EAAE,iBAAiB;IAAEL,IAAI,EAAE;EACpC,CAAC,EACD;IACIK,KAAK,EAAE,iBAAiB;IAAEL,IAAI,EAAE;EACpC,CAAC,CACJ;EAED,oBACIJ,OAAA;IAAAG,QAAA,gBACIH,OAAA;MAAAG,QAAA,eACIH,OAAA;QAAAG,QAAA,gBACIH,OAAA;UAAAG,QAAA,EAAI;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACXR,OAAA;UAAAG,QAAA,EAAI;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACRR,OAAA;MAAAG,QAAA,EACKS,KAAK,CAACC,GAAG,CAACC,IAAI,iBAAId,OAAA,CAACC,IAAI;QAACC,QAAQ,EAAEY;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAACO,GAAA,GAhCIJ,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}